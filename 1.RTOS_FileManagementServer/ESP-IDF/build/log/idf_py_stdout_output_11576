[1/5] cd /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/esp-idf/esptool_py && /Users/vanshajshah/.espressif/python_env/idf5.4_py3.11_env/bin/python /Users/vanshajshah/esp/v5.4.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/partition_table/partition-table.bin /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/ESP-IDF.bin
ESP-IDF.bin binary size 0x32ca0 bytes. Smallest app partition is 0x100000 bytes. 0xcd360 bytes (80%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/bootloader/esp-idf/esptool_py && /Users/vanshajshah/.espressif/python_env/idf5.4_py3.11_env/bin/python /Users/vanshajshah/esp/v5.4.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/bootloader/bootloader.bin
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[3/5] No install step for 'bootloader'
[4/5] Completed 'bootloader'
[4/5] cd /Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/vanshajshah/esp/v5.4.2/esp-idf -D "SERIAL_TOOL=/Users/vanshajshah/.espressif/python_env/idf5.4_py3.11_env/bin/python;;/Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build -P /Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/tty.usbmodem1234561 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 ESP-IDF.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port /dev/tty.usbmodem1234561

A fatal error occurred: Could not open /dev/tty.usbmodem1234561, the port is busy or doesn't exist.
([Errno 2] could not open port /dev/tty.usbmodem1234561: [Errno 2] No such file or directory: '/dev/tty.usbmodem1234561')

Hint: Check if the port is correct and ESP connected

FAILED: [code=1] CMakeFiles/flash /Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build/CMakeFiles/flash 
cd /Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/vanshajshah/esp/v5.4.2/esp-idf -D "SERIAL_TOOL=/Users/vanshajshah/.espressif/python_env/idf5.4_py3.11_env/bin/python;;/Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/vanshajshah/Documents/Programming/code/Embedded-Systems/1.RTOS_FileManagementServer/ESP-IDF/build -P /Users/vanshajshah/esp/v5.4.2/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
